@model IEnumerable<dynamic>
@using Newtonsoft.Json.Linq
@using Newtonsoft.Json
@{
    ViewData["Title"] = "Home Page";
}
<h2>Gráfico de Temperatura (Histórico)</h2>

<canvas id="myChart" width="400" height="200"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
<script type="module">
    import { parse } from 'https://cdn.jsdelivr.net/npm/date-fns@2.22.1/esm/index.js';
    import { enUS } from 'https://cdn.jsdelivr.net/npm/date-fns@2.22.1/esm/locale/index.js';

    Chart._adapters._date.override(window.dateFns);
    console.log('Chart.js version:', Chart.version);
    console.log('Date Adapter Loaded:', typeof Chart._adapters._date !== 'undefined');
    $(document).ready(function () {
        // Dados passados para a partial view
        var dataFromServer = @Html.Raw(JsonConvert.SerializeObject(Model));
        // Converte a string JSON em um objeto JavaScript
        //var jsonData = JSON.parse(dataFromServer);

        console.log("Chamada Script Partial view.");
        console.log(dataFromServer)
        renderChart(dataFromServer);
    });

    function renderChart(data) {
        var labels = data.map(function (e) {
            return parse(e.RecvTime, 'dd/MM/yyyy HH:mm:ss', new Date());
        });
        var values = data.map(function (e) {
            return e.AttrValue;
        });

        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Temperatura',
                    data: values,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1,
                    pointRadius: 0
                }]
            },
            options: {
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'second', // Unidade de tempo ajustada para segundos
                            tooltipFormat: 'MMM dd, yyyy, HH:mm:ss', // Formato da dica de ferramenta
                            displayFormats: {
                                second: 'HH:mm:ss',
                                minute: 'HH:mm',
                                hour: 'HH:mm',
                                day: 'MMM dd'
                            }
                        },
                        title: {
                            display: true,
                            text: 'Time'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Value'
                        }
                    }
                }
            }
        });
    }
</script>
